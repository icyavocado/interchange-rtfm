Interchange iTransact Support
       Vend::Payment::iTransact $Revision: 2.2 $

SYNOPSIS
           &charge=itransact

               or

           [charge mode=itransact param1=value1 param2=value2]


PREREQUISITES
         Net::SSLeay

           or

         LWP::UserAgent and Crypt::SSLeay

       Only one of these need be present and working.

DESCRIPTION
       The Vend::Payment::iTransact module implements the
       itransact() routine for use with Interchange. It is
       compatible on a call level with the other Interchange
       payment modules -- in theory (and even usually in
       practice) you could switch from CyberCash to iTransact
       with a few configuration file changes.

       To enable this module, place this directive in
       interchange.cfg:

           Require module Vend::Payment::iTransact

       This must be in interchange.cfg or a file included from
       it.

       Make sure CreditCardAuto is off (default in Interchange
       demos).

       The mode can be named anything, but the gateway parameter
       must be set to itransact. To make it the default payment
       gateway for all credit card transactions in a specific
       catalog, you can set in catalog.cfg:

           Variable   MV_PAYMENT_MODE  itransact

       It uses several of the standard settings from Interchange
       payment. Any time we speak of a setting, it is obtained
       either first from the tag/call options, then from an
       Interchange order Route named for the mode, then finally a
       default global payment variable, For example, the id
       parameter would be specified by:

           [charge mode=itransact id=YouriTransact]

       or

           Route itransact id YouriTransactID

       or

           Variable MV_PAYMENT_ID      YouriTransactID

       The active settings are:

       id  Your iTransact account ID, supplied by iTransact when
           you sign up.  Global parameter is MV_PAYMENT_ID.

       home_page
           The internet address of your site. Defaults to
           http://__SERVER_NAME__ if not set. Global parameter is
           MV_PAYMENT_HOME_PAGE.

       remap
           This remaps the form variable names to the ones needed
           by iTransact. See the Payment Settings heading in the
           Interchange documentation for use.

       Troubleshooting

       Try the instructions above, then enable test mode. A test
       order should complete.

       Then move to live mode and try a sale with the card number
       4111 1111 1111 1111 and a valid expiration date. The sale
       should be denied, and the reason should be in [data
       session payment_error].

       If nothing works:

       o   Make sure you "Require"d the module in
           interchange.cfg:

               Require module Vend::Payment::iTransact


       o   Make sure either Net::SSLeay or Crypt::SSLeay and
           LWP::UserAgent are installed and working. You can test
           to see whether your Perl thinks they are:

               perl -MNet::SSLeay -e 'print "It works\n"'

           or

               perl -MLWP::UserAgent -MCrypt::SSLeay -e 'print "It works\n"'

           If either one prints "It works." and returns to the
           prompt you should be OK (presuming they are in working
           order otherwise).

       o   Check the error logs, both catalog and global.

       o   Make sure you set your account ID properly.

       o   Try an order, then put this code in a page:

               <XMP>
               [calc]
                   my $string = $Tag->uneval( { ref => $Session->{payment_result} });
                   $string =~ s/{/{\n/;
                   $string =~ s/,/,\n/g;
                   return $string;
               [/calc]
               </XMP>

           That should show what happened.

       o   If all else fails, Red Hat and other consultants are
           available to help with integration for a fee.

BUGS
       There is actually nothing *in* Vend::Payment::iTransact.
       It changes packages to Vend::Payment and places things
       there.

AUTHORS
       Mark Johnson <markj@redhat.com> and Cameron Prince
       <cprince@redhat.com>, based on original code by Mike Heins
       <mheins@redhat.com>.
